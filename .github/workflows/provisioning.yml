name: 'Terraform Provisioning'

on:
  push:
    branches: [ "*" ]
  workflow_dispatch:

jobs:
  terraform:
    concurrency: 
      group: terraform
      cancel-in-progress: true
    runs-on: ubuntu-latest

    env:
      AWS_DEFAULT_REGION: "us-east-1"  
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      INSTANCE_SSH_PUBLIC_KEY: ${{ secrets.INSTANCE_SSH_PUBLIC_KEY }}
      OCI_FINGERPRINT: ${{ secrets.OCI_FINGERPRINT }}
      OCI_API_API_KEY_PEM: ${{ secrets.OCI_API_API_KEY_PEM }}
      OCI_REGION: ${{ secrets.OCI_REGION }}
      OCI_TENANCY_OCID: ${{ secrets.OCI_TENANCY_OCID }}
      OCI_USER: ${{ secrets.OCI_USER }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1


      - name: Create OCI private key file
        run: |
          cat <<EOF > oci_api_key.pem
          ${{ secrets.OCI_API_API_KEY_PEM }}
          EOF
          chmod 600 oci_api_key.pem

      - name: Create SSH public key file
        run: |
          cat <<EOF > aws_terraform
          ${{ secrets.INSTANCE_SSH_PUBLIC_KEY }}
          EOF
          chmod 600 aws_terraform
      
      - name: Generate tfvars file
        run: |
          cat <<EOF > terraform/n8n_machine/terraform.tfvars
          compartiment_id   = "$OCI_TENANCY_OCID"
          tenancy           = "$OCI_TENANCY_OCID"
          tenancy_ocid      = "$OCI_TENANCY_OCID"
          fingerprint       = "$OCI_FINGERPRINT"
          region            = "$OCI_REGION"
          user              = "$OCI_USER"
          ssh_key           = "/home/runner/work/oci_cloud/oci_cloud/aws_terraform"
          key_file          = "/home/runner/work/oci_cloud/oci_cloud/oci_api_key.pem"
          ssh_public_key    = "/home/runner/work/oci_cloud/oci_cloud/aws_terraform"
          EOF
          
      - name: Terraform Init        
        run: |
          cd terraform/n8n_machine
          terraform init

      - name: Terraform Plan
        run: |
          cd terraform/n8n_machine
          terraform plan

      - name: Terraform Apply
        run: |
          cd terraform/n8n_machine
          terraform apply -auto-approve
      
      - name: Install Ansible
        run: |
          sudo apt update
          sudo apt install -y ansible

      - name: Run Ansible Playbook
        run: |
          ansible-playbook ansible/n8n_machine.yml -i ansible/n8n_machine.ini
      
