name: 'Terraform Provisioning'

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_DEFAULT_REGION: "us-east-1"  
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        COMPARTIMENT_ID: ${{ secrets.OCI_COMPARTIMENT_ID }}
        FINGERPRINT: ${{ secrets.OCI_FINGERPRINT }}
        PRIVATE_KEY: ${{ secrets.OCI_PRIVATE_KEY }}
        REGION: "sa-saopaulo-1"
        SSH_KEY: ${{ secrets.SSH_KEY }}
        SSH_PUBLIC_KEY: ${{ secrets.OCI_SSH_PUBLIC_KEY }}
        TENANCY_OCID: ${{ secrets.OCI_TENANCY_OCID }}
        TENANCY: ${{ secrets.OCI_TENANCY }}
        USER_OCID: ${{ secrets.OCI_USER_OCID }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Set AWS credentials (using GitHub Secrets)
        run: echo "AWS credentials set"

      - name: Create OCI private key file
        run: |
          echo "${{ secrets.OCI_PRIVATE_KEY }}" > oci_api_key.pem
          chmod 600 oci_api_key.pem  

      - name: Create OCI private key file
        run: |
          echo "${{ secrets.AWS_TERRAFORM_PUB }}" > aws_terraform.pub
          chmod 600 aws_terraform.pub  

      - name: Generate tfvars file
        run: |
          echo "compartiment_id = \"${{ secrets.OCI_TENANCY_OCID }}\"" >> terraform/n8n_machine/terraform.tfvars
          echo "fingerprint = \"${{ secrets.OCI_FINGERPRINT }}\"" >> terraform/n8n_machine/terraform.tfvars
          echo "key_file = \"${{ secrets.OCI_PRIVATE_KEY }}\"" >> terraform/n8n_machine/terraform.tfvars      
          echo "region = \"sa-saopaulo-1\"" >> terraform/n8n_machine/terraform.tfvars
          echo "ssh_key = \"${{ secrets.SSH_KEY }}\"" >> terraform/n8n_machine/terraform.tfvars      
          echo "ssh_public_key = \"${{ secrets.OCI_SSH_PUBLIC_KEY }}\"" >> terraform/n8n_machine/terraform.tfvars
          echo "tenancy = \"${{ secrets.OCI_TENANCY }}\"" >> terraform/n8n_machine/terraform.tfvars
          echo "tenancy_ocid = \"${{ secrets.OCI_TENANCY_OCID }}\"" > terraform/n8n_machine/terraform.tfvars
          echo "user = \"${{ secrets.OCI_USER_OCID }}\"" >> terraform/n8n_machine/terraform.tfvars
 
      - name: Terraform Init        
        run: |
          cd terraform/n8n_machine
          terraform init

      - name: Terraform Plan
        run: |
          cd terraform/n8n_machine
          terraform plan

      # Passo adicional para aplicar o Terraform, se desejado:
      # - name: Terraform Apply
      #   run: terraform apply -auto-approve
